<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Salir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAABFRJREFUWEe9mCFY20AUxxETE4iKCsTExARiYmICgUBOTEwgJxFIBAKBQ0wiEBOI
        CeTExARiAoFAIBCICgRiYqICwceXNunofv/ru9A2ufQS2v2/L6TcvXv3y7t7d5csNdVwOFzp9/tbf7Ps
        2yBNfw6y7ILr1q5Lyk5Vl6bpzjBJXluzxQqoljoE4JxrWPO6ou0+Ptrmbn7C6Qucb2dp+sd3qN9E6DjL
        so/UvX98eHhl5j6671SHzSH2iqpvd4f9HjYvzfx5wtkajjt5B1l2Qtm6VUdLwMAeAZiZr1s9gFU306Df
        /4zDxDlM0zNFyqoaK0mSN4PB4Id7WGAVTauKl4aUpz0Yc7JtVXNT1utt4vhefSiZ1KdVzdYYXJdh2LDi
        uYthf0s/bn5q6lhxtTSsHq7X661a8cKkhKK/G/XJSO1bcbkwWAMs4eKBFhe5aSkQfrgZ+k9WPCnNAQxc
        tlbNOexWHx8fv3NftqKZkm/aaJ4Fs18Z7QBZvrBrWfGTBCUDZasVFWRwcjDkfs5tJiQ2gtMDqc09tyCk
        kkUMygErGolGLZFb9EqXEmxyOK9ZkNTlcF5VkFrsbYol4wu/oqftK5hJOCzAeYUgKSvAeVVB+hWE+6EV
        kbm2twJa/mSBjrymIfkdhPOi/tLMJ6TIWbB+uwJsleZucrqCEmGzbBBBeUiuGLgOtxVzXxA8OhkpYGta
        LLf0DyE9tvpS4TAK8rlwEmD7xnSQZ47S3OqDwvFMyCrFwEk6WIjJrSh22Axm77TooBFkLJyEXdsBZtl1
        Pt4TaT1DOKgFWQfOi5zIXF4A5zZrK48WHUZBNoGTci6ls2itPFp0OjNbJXuI6G3RKwfkz6V+oOinxDYK
        zqsJpHYTrq6S5FSAyhyrqxQd1YLzqgOJXUtMXJ3xZeaD1QdFw0ZwXrGQdpAdLTN+H57Y+0qE46gdwiCC
        ioGcYNJLtaNlUlp9QTiMguO2whW143ALQipyYmJUR4dm/rlSQWge4lCHzaA8nJnrgWIgS8+dVLVtDezy
        e/QiNbb3HbmCKWG4jkMdkQqahvOiLAhJeca1aaYTgmXXWJ7OBrRZgfhO5HpvteIJYVOADMF5UVeArIKj
        Wgdnx1F4YfNR1Eu1FRWEgxxyFpwXNjlkFZykpLDofbWiJ9H+pXYVGQTfrBB2grzkXmdhF+RZFRwB0hul
        5t5d0LeOXGZ0r7XIihcuAdGnfyeq/oqBwZ4bapadOlFqKkWXvtx2Wzq0ZcLQ7S5cN4v8uqAAeDjWvl/8
        H/d9BkPNxxM11HBr6K1qbrI5N/reOIKrdZhw8pmteamo1jnUhgRIS9kqn/KtYY2OXJmU0TjrGmiCw4Mm
        oEC0eeBdfNyZL31pnc9nPXvqLwJ0QzK6LhRhZbs6N9NcaqM6bHa0t9LWRUx3i9r8E1AHCzc8tl6OXwag
        U/Dt1IP4+i5tj//HJz0nIrOm4baTxzUA4x/YNSU6qrMH2iBiDebZ0tI/pGHjTpjbBQoAAAAASUVORK5C
        YII=
</value>
  </data>
</root>